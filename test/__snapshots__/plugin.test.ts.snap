// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`compile stub project 1`] = `
{
  "stub.js": "import { assistant, user, ChatClient, chat } from "ts-chat";
const client = new ChatClient({
  apiKey: process.env.OPENAI_API_KEY,
});
export const sym = Symbol.for("ts");
export const myFunc = chat.function(minus, () => ({
  name: "minus",
  description: "Subtracts two numbers",
  parameterNames: ["a", "b"],
  parameters: {
    type: "object",
    properties: {
      a: { type: "number", description: "first argument", minimum: 1 },
      b: { type: "number", description: "second argument" },
    },
  },
}));
export async function main() {
  await client.chat(
    {
      myFunc,
      /**
       * Adds two numbers
       *
       * @param a
       * @param b second arguments
       * @returns the sum of a and b
       */
      add(
        /**
         * first argument
         */
        a,
        /**
         * @min 2
         */
        b,
      ) {
        return a + b;
      },
      minus,
      getMonth(time) {
        return time;
      },
      hello(person, message) {
        return \`Hello \${person.name}, \${message}\`;
      },
      list(strings) {
        return "foo";
      },
    },
    {
      messages: [
        //
        user\`Hello, I am a user\`,
        sam\`Hello, I am an assistant\`,
      ],
    },
    () => ({
      functions: {
        add: {
          name: "add",
          description: "Adds two numbers",
          parameterNames: ["a", "b"],
          parameters: {
            type: "object",
            properties: {
              a: { type: "integer", description: "" },
              b: {
                type: "number",
                description: "second arguments",
                minimum: 2,
              },
            },
          },
        },
        minus: {
          name: "minus",
          description: "Subtracts two numbers",
          parameterNames: ["a", "b"],
          parameters: {
            type: "object",
            properties: {
              a: { type: "number", description: "first argument", minimum: 1 },
              b: { type: "number", description: "second argument" },
            },
          },
        },
        getMonth: {
          name: "getMonth",
          parameterNames: ["time"],
          parameters: {
            type: "object",
            properties: { time: { type: "string", format: "date-time" } },
          },
        },
        hello: {
          name: "hello",
          parameterNames: ["person", "message"],
          parameters: {
            type: "object",
            properties: {
              person: {
                type: "object",
                description: "A Person",
                properties: {
                  name: {
                    type: "string",
                    pattern: "^[a-zA-Z]+$",
                    minLength: 3,
                  },
                },
              },
              message: { type: "string" },
            },
          },
        },
        list: {
          name: "list",
          parameterNames: ["strings"],
          parameters: {
            type: "object",
            properties: {
              strings: { type: "array", items: [{ type: "string" }] },
            },
          },
        },
      },
    }),
  );
}
const sam = assistant("Sam");
/**
 * Subtracts two numbers
 * @param a first argument
 * @param b second argument
 * @returns a - b
 */
function minus(a, b) {
  return a - b;
}
",
}
`;
